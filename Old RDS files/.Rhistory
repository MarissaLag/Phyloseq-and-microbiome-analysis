gray <- gray(seq(0,1,length=5))
#min-prevalence gets the 100th highest prevalence
p <- plot_core(pseq.rel,
plot.type = "heatmap",
colours = gray,
prevalences = prevalences,
detections = detections,
min.prevalence = prevalence(pseq.rel, sort = TRUE)[100]) +
labs(x = "Detection Threshold\n(Relative Abundance (%))") +
#Adjusts axis text size and legend bar height
theme(axis.text.y= element_text(size=8, face="italic"),
axis.text.x.bottom=element_text(size=8),
axis.title = element_text(size=10),
legend.text = element_text(size=8),
legend.title = element_text(size=10))
p <- plot_core(pseq.rel,
plot.type = "heatmap",
prevalence = 0.1,  # Set the prevalence threshold (you can adjust this value based on your needs)
detection = 10,    # Set the detection threshold
colours = "gray") +
labs(x = "Detection Threshold\n(Relative Abundance (%))") +
theme(axis.text.y = element_text(size = 8, face = "italic"),
axis.text.x.bottom = element_text(size = 8),
axis.title = element_text(size = 10),
legend.text = element_text(size = 8),
legend.title = element_text(size = 10))
p
Core_trial
#recall pseq_filt object
pseq_filt
prune_pseq_filt<- prune_taxa(otu_names_list, pseq_filt)
pseq_filt
otu_names_list <- Core_trial$OTU
otu_names_list
prune_pseq_filt<- prune_taxa(otu_names_list, pseq_filt)
prune_pseq_filt
library(pheatmap)
#713 taxa remaing, lets reduce it to 300 taxa to make heat map clearer
#top 300 most abundant taxa
prune_pseq_filt <- prune_taxa(names(sort(taxa_sums(prune_pseq_filt),TRUE)[1:300]), prune_pseq_filt)
prune_pseq_filt
plot_heatmap(prune_pseq_filt, sample.label="Treatment")
prune_pseq_filt <- prune_taxa(names(sort(taxa_sums(prune_pseq_filt),TRUE)[1:100]), prune_pseq_filt)
prune_pseq_filt
plot_heatmap(prune_pseq_filt, sample.label="Treatment")
plot_heatmap(prune_pseq_filt, sample.label="Treatment"~"Age")
plot_heatmap(prune_pseq_filt, sample.label="Age")
#plot treatments seperately
prune_pseq_filt <- subset_samples(prune_pseq_filt, Treatment %in% c("Control"))
prune_pseq_filt
plot_heatmap(prune_pseq_filt, sample.label="Age")
sample_order <- c("Day 01,", "Day 03", "Day 06", "Day 15")
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = sample_order)
prune_pseq_filt <- subset_samples(prune_pseq_filt, Treatment %in% c("Control"))
prune_pseq_filt
sample_order <- c("Day 01", "Day 03", "Day 06", "Day 15")
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = sample_order)
prune_pseq_filt <- subset_samples(prune_pseq_filt, Treatment %in% c("Control"))
sample_order <- c("Day 01", "Day 03", "Day 06", "Day 15")
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = sample_order)
p
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = c("Day 01", "Day 03", "Day 06", "Day 15"))
p
p <- plot_heatmap(prune_pseq_filt, sample.label="Age"
)
p
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age")
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age")
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age", method = "NMDS", distance = "bray")
pheatmap(prune_pseq_filt)
otu_names_list <- Core_trial$OTU
prune_pseq_filt<- prune_taxa(otu_names_list, pseq_filt)
prune_pseq_filt
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age", method = "NMDS", distance = "bray")
plot_heatmap(prune_pseq_filt, sample.label="Treatment", sample.order = "Age", method = "NMDS", distance = "bray")
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age", method = "NMDS", distance = "bray")
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Treatment", method = "NMDS", distance = "bray")
plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Treatment", method = "NMDS", distance = "bray")
prune_pseq_filt<- prune_taxa(otu_names_list, pseq_filt)
prune_pseq_filt
OTU = prune_pseq_filt@otu_table
Meta = prune_pseq_filt@sam_data
OTU1 = as(OTU, "matrix")
Metadata = as(Metadata, "matrix")
write.csv(OTU1, file="Data_fram_1_James_sharedOTU.cvs",row.names=TRUE)
write.csv(Metadata, file="Data_fram_1_James_Meta_sharedOTU.cvs",row.names=TRUE )
write.table(OTU1,file="data_table_James_sharedOTU.csv",sep=",",dec = " ")
write.table(Metadata,file="data_table_James_Meta_sharedOTU.csv",sep=",",dec = " ")
pc_FUN = read.csv("data_table_James_sharedOTU.csv", header= TRUE)
View(pc_FUN)
View(pc_FUN)
matrix_F = pc_FUN[ ,7:350]
time_a_F = pc_FUN$Age
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
summary(inv_F)
selected_columns <- c("Day 01", "Day 03", "Day 06", "Day 15")
subset_data <- inv_F@str[, selected_columns]
# Create a subset of your data including only the selected columns
#
subset_data <- inv_F@str[, selected_columns]
inv_F$str
# Create a subset of your data including only the selected columns
#
subset_data <- inv_F$str[, selected_columns]
#Change column order in heatmap
new_column_order <- c("Day 01", "Day 03", "Day 06", "Day 15")
pheatmap(subset_data, column_order = new_column_order, cluster_cols = FALSE, show_rownames = FALSE, main = "Treatment")
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Treatment", method = "NMDS", distance = "bray")
p
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age", method = "NMDS", distance = "bray")
p
p + facet_grid("Treatment")
p + facet_wrap("Treatment")
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age", method = "NMDS", distance = "bray", facet_grid("Treatment"))
p
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", method = "NMDS", distance = "bray", facet_grid("Treatment"))
p
p + facet_wrap("Treatment")
p <- plot_heatmap(prune_pseq_filt, sample.label="Age", sample.order = "Age", method = "NMDS", distance = "bray", facet_grid("Treatment"))
p
p + facet_wrap("Treatment")
prune_pseq_filt_comb <-merge_samples(prune_pseq_filt, "Treat_Age", fun= mean)
prune_pseq_filt
prune_pseq_filt@sam_data
prune_pseq_filt
new_column_data <- "1"
prune_pseq_filt@sam_data$new_column_name <- new_column_data
View(prune_pseq_filt_comb)
View(prune_pseq_filt@sam_data)
Treat_Age <- c("C - 1dpf", "C - 15dpf", "C - 3dpf", "C - 6dpf", "C - 1dpf", "C - 15dpf", "C - 3dpf", "C - 6dpf", "A - 1dpf", "A - 1dpf", "A - 15dpf", "A - 15dpf", "A - 15dpf", "A - 3dpf", "A - 3dpf", "A - 6dpf", "A - 6dpf", "C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 1dpf", "C - 15dpf", "C - 3dpf", "C - 6dpf")
prune_pseq_filt@sam_data$new_column_name <- Treat_Age
prune_pseq_filt@sam_data
prune_pseq_filt@sam_data$Treat_Age <- Treat_Age
prune_pseq_filt@sam_data
prune_pseq_filt_comb <-merge_samples(prune_pseq_filt, "Treat_Age", fun= mean)
View(prune_pseq_filt@sam_data)
View(prune_pseq_filt_comb@sam_data)
prune_pseq_filt@sam_data
prune_pseq_filt@sam_data
prune_pseq_filt
prune_pseq_filt@sam_data
prune_pseq_filt_comb <-merge_samples(prune_pseq_filt, "Treat_Age", fun= mean)
View(prune_pseq_filt_comb@sam_data)
prune_pseq_filt@sam_data
sample_data(prune_pseq_filt) <- sample_data(prune_pseq_filt)[, !(colnames(sample_data(prune_pseq_filt)) %in% "new_column_name")]
prune_pseq_filt@sam_data
prune_pseq_filt@sam_data$Treat_Age <- Treat_Age
prune_pseq_filt@sam_data
prune_pseq_filt_comb <-merge_samples(prune_pseq_filt, "Treat_Age", fun= mean)
View(prune_pseq_filt_comb@sam_data)
prune_pseq_filt_comb@sam_data
prune_pseq_filt@sam_data
prune_pseq_filt_comb <-merge_samples(prune_pseq_filt, "Treat_Age", fun= mean)
View(prune_pseq_filt_comb@sam_data)
p <- plot_heatmap(prune_pseq_filt_comb, sample.label="Age", sample.order = "Age", method = "NMDS", distance = "bray", facet_grid("Treatment"))
p
plot_heatmap(prune_pseq_filt_comb, sample.label="Age", sample.order = "Age")
plot_heatmap(prune_pseq_filt_comb)
order <- c("C - 1dpf", "A - 1dpf", "C - 3dpf", "A - 3dpf", "C - 6 dpf", "A - 6dpf", "C - 15 dpf", "A - 15 dpf")
order <- c("C - 1dpf", "A - 1dpf", "C - 3dpf", "A - 3dpf", "C - 6 dpf", "A - 6dpf", "C - 15 dpf", "A - 15 dpf")
plot_heatmap(prune_pseq_filt_comb, sample.order = order)
order <- c("C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 15dpf", "A - 1dpf", "A - 3dpf", "A - 6dpf", "A - 15dpf")
plot_heatmap(prune_pseq_filt_comb, sample.order = order)
prune_pseq_filt <- prune_taxa(names(sort(taxa_sums(prune_pseq_filt),TRUE)[1:100]), prune_pseq_filt)
prune_pseq_filt@sam_data
prune_pseq_filt_comb <-merge_samples(prune_pseq_filt, "Treat_Age", fun= mean)
View(prune_pseq_filt_comb@sam_data)
order <- c("C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 15dpf", "A - 1dpf", "A - 3dpf", "A - 6dpf", "A - 15dpf")
plot_heatmap(prune_pseq_filt_comb, sample.order = order)
order <- c("C - 1dpf", "A - 1dpf", "C - 3dpf", "A - 3dpf", "C - 6dpf", "A - 6dpf", "C - 15dpf", "A - 15dpf")
plot_heatmap(prune_pseq_filt_comb, sample.order = order)
pc_FUN = read.csv("data_table_James.csv", header= TRUE)
View(pc_FUN)
#Inverse data
funi_df<- t(pc_FUN)
Remove_days <- pc_FUN[pc_FUN[, 4] %in% c("1 dpf", "3 dpf", "6 dpf", "15 dpf"), ]
View(Remove_days)
matrix_F = Remove_days[ ,9:350]
time_a_F = pc_FUN$Age
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
time_a_F = pc_FUN$Age
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
View(Remove_days)
time_a_F = Remove_days$dpf
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
summary(inv_F)
significant_asvs_indices <- which(inv_F$sign$p.value < 0.01)
significant_asvs_matrix <- inv_F$str[significant_asvs_indices, ]
selected_columns <- c("1 dpf", "3 dpf", "6 dpf", "15 dpf")
subset_data <- significant_asvs_matrix[, selected_columns]
View(subset_data)
str(subset_data)
asv_list <- dimnames(subset_data)[[1]]
asv_list
age_ASVs <- prune_taxa(asv_list, prune_pseq_filt_comb)
plot_heatmap(age_ASVs, sample.order = order)
order <- c("C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 15dpf", "A - 1dpf", "A - 3dpf", "A - 6dpf", "A - 15dpf")
plot_heatmap(prune_pseq_filt_comb, sample.order = order)
order <- c("C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 15dpf", "A - 1dpf", "A - 3dpf", "A - 6dpf", "A - 15dpf")
plot_heatmap(age_ASVs, sample.order = order)
psmelt_age_ASVs <- age_ASVs
my_hclust_ASV <- hclust(dist(psmelt_age_ASVs), method = "complete")
subset_data
psmelt_age_ASVs
age_ASVs <- psmelt_age_ASVs
psmelt_age_ASVs <- psmelt(age_ASVs)
my_hclust_ASV <- hclust(dist(psmelt_age_ASVs), method = "complete")
as.dendrogram(my_hclust_ASV) %>%
plot(horiz = TRUE)
my_ASV_col <- cutree(tree = as.dendrogram(my_hclust_ASV), k = 4)
my_ASV_col <- data.frame(cluster = factor(my_ASV_col, labels = c("cluster 1", "cluster 2", "cluster 3", "cluster 4")))
head(my_ASV_col)
pheatmap(psmelt_age_ASVs, annotation_row = my_ASV_col, annotation_col = my_sample_col)
pheatmap(psmelt_age_ASVs, annotation_row = my_ASV_col, annotation_col = my_sample_col)
plot_heatmap(age_ASVs, sample.order = order)
plot_heatmap(age_ASVs, sample.order = order, low="#000033", high="#CCFF66")
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033", na.value="white")
order <- c("C - 1dpf", "A - 1dpf", "C - 3dpf", "A - 3dpf", "C - 6dpf", "A - 6dpf", "C - 15dpf", "A - 15dpf")
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033", na.value="white")
asv_list
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033", na.value="white", taxa.order = age_ASVs)
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033", na.value="white", taxa.order = asv_list)
plot_heatmap(age_ASVs, sample.order = order, taxa.order = asv_list)
order <- c("C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 15dpf", "A - 1dpf", "A - 3dpf", "A - 6dpf", "A - 15dpf")
plot_heatmap(age_ASVs, sample.order = order, taxa.order = asv_list)
plot_heatmap(age_ASVs, sample.order = order, taxa.order = asv_list, low="#66CCFF", high="#000033", na.value="white",)
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033", na.value="white")
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033", na.value="white", trans = log_trans(4))
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033", na.value="white")
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033")
pheatmap(psmelt_age_ASVs)
pheatmap(psmelt_age_ASVs)
age_ASVs
age_ASVs.rel <- microbiome::transform(age_ASVs, "compositional")
plot_heatmap(age_ASVs, sample.order = order, low="#66CCFF", high="#000033")
plot_heatmap(age_ASVs.rel, sample.order = order, low="#66CCFF", high="#000033")
plot_heatmap(age_ASVs.rel, sample.order = order, high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs, sample.order = order, high="#66CCFF", low="#000033")
age_ASVs.rel <- microbiome::transform(age_ASVs, "squared")
age_ASVs.rel <- microbiome::transform(age_ASVs, "log")
plot_heatmap(age_ASVs.rel, sample.order = order, high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs, sample.order = order, high="#66CCFF", low="#000033")
View(age_ASVs@tax_table)
plot_heatmap(age_ASVs.rel, sample.order = order, high="#66CCFF", low="#000033", distance = "unifrac", "MDS")
plot_heatmap(age_ASVs, sample.order = order, high="#66CCFF", low="#000033")
age_ASVs.rel <- microbiome::transform(age_ASVs, "rank")
plot_heatmap(age_ASVs.rel, sample.order = order, high="#66CCFF", low="#000033")
age_ASVs.rel <- microbiome::transform(age_ASVs, "clr")
plot_heatmap(age_ASVs.rel, sample.order = order, high="#66CCFF", low="#000033")
age_ASVs.rel <- microbiome::transform(age_ASVs, "log")
plot_heatmap(age_ASVs.rel, sample.order = order, high="#66CCFF", low="#000033")
plot_heatmap(prune_pseq_filt_comb, sample.order = order)
pseq <-`Filtered_Rarified_MU42022_23-12-13`
pseq_filt <- subset_samples(pseq, Age %in% c("Day 01", "Day 03", "Day 06", "Day 15"))
ps10<-merge_samples(pseq, "Treatment", fun= mean)
Core_trial<-core(ps10, detection=0.5/100, prevalence = 90/100)
View(Core_trial@otu_table)
Core_trial
otu_names_list <- Core_trial$OTU
Core_trial <- psmelt(Core_trial)
otu_names_list <- Core_trial$OTU
otu_names_list
pseq
otu_names_list <- Core_trial$OTU
prune_pseq_filt<- prune_taxa(otu_names_list, pseq)
prune_pseq_filt@sam_data
prune_pseq_filt
asv_list <- dimnames(subset_data)[[1]]
age_ASVs <- prune_taxa(asv_list, prune_pseq_filt)
plot_heatmap(age_ASVs, sample.order = order, high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs)
plot_heatmap(age_ASVs, sample.order = "Age", high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs, sample.label = "Age"
sample.order = "Treatment", high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs, sample.label = "Age",
sample.order = "Treatment", high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "Treatment", high="#66CCFF", low="#000033")
asv_list <- dimnames(subset_data)[[1]]
asv_list
age_ASVs <- prune_taxa(asv_list, prune_pseq_filt)
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "Treatment", high="#66CCFF", low="#000033")
otu_names_list <- Core_trial$OTU
prune_pseq_filt<- prune_taxa(otu_names_list, pseq_filt)
prune_pseq_filt
asv_list <- dimnames(subset_data)[[1]]
age_ASVs <- prune_taxa(asv_list, prune_pseq_filt)
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "Treatment", high="#66CCFF", low="#000033")
age_ASVs
View(age_ASVs)
age_ASVs@sam_data[["Treatment"]]
pseq <-`Filtered_Rarified_MU42022_23-12-13`
pseq_filt <- subset_samples(pseq, Age %in% c("Day 01", "Day 03", "Day 06", "Day 15"))
pseq_filt <- subset_samples(pseq_filt, Treatment %in% c("Control", "Antibiotics"))
otu_names_list <- Core_trial$OTU
prune_pseq_filt<- prune_taxa(otu_names_list, pseq_filt)
prune_pseq_filt
asv_list <- dimnames(subset_data)[[1]]
age_ASVs <- prune_taxa(asv_list, prune_pseq_filt)
plot_heatmap(age_ASVs, sample.label = "Treatment",
)
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "Treatment", high="#66CCFF", low="#000033")
order <- c("C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 15dpf", "A - 1dpf", "A - 3dpf", "A - 6dpf", "A - 15dpf")
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "Treatment", high="#66CCFF", low="#000033")
order <- c("C - 1dpf", "C - 3dpf", "C - 6dpf", "C - 15dpf", "A - 1dpf", "A - 3dpf", "A - 6dpf", "A - 15dpf")
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = order, high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "order", high="#66CCFF", low="#000033")
age_ASVs@sam_data
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "Age", high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs)
plot_heatmap(age_ASVs, sample.label = "Age")
pc_FUN = read.csv("data_table_James.csv", header= TRUE)
#Inverse data
funi_df<- t(pc_FUN)
Remove_days <- pc_FUN[pc_FUN[, 4] %in% c("1 dpf", "3 dpf", "6 dpf", "15 dpf"), ]
View(Remove_days)
matrix_F = Remove_days[ ,9:350]
time_a_F = Remove_days$dpf
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
summary(inv_F)
comb_matrix <- inv_F$comb
pheatmap(comb_matrix)
inv_F$comb
selected_columns <- c("1 dpf", "3 dpf", "6 dpf", "15 dpf")
subset_data <- inv_F@str[, selected_columns]
subset_data <- inv_F$str[, selected_columns]
View(subset_data)
new_column_order <- c("1 dpf", "3 dpf", "6 dpf", "15 dpf")
pheatmap(subset_data, column_order = new_column_order, cluster_cols = FALSE, show_rownames = FALSE, main = "Treatment")
pheatmap(subset_data, column_order = new_column_order, cluster_cols = FALSE, show_rownames = FALSE, main = "")
#write as list - can select signif ASVs to view with phyloseq heatmaps
asv_list_all <- dimnames(subset_data)[[1]]
View(asv_list_all)
asv_list_all
inv_F$str
inv_F$cluster
inv_F$call
inv_F$func
inv_F$A
pseq <-`Filtered_Rarified_MU42022_23-12-13`
OTU = pseq@otu_table
Tax = pseq@tax_table
Metadata = pseq@sam_data
Tree = pseq@phy_tree
pseq_filt <- subset_samples(pseq, Age %in% c("Day 01", "Day 03", "Day 06", "Day 15"))
pseq_filt <- subset_samples(pseq_filt, Treatment %in% c("Control", "Antibiotics"))
OTU = pseq_filt@otu_table
Tax = pseq_filt@tax_table
Metadata = pseq_filt@sam_data
Tree = pseq_filt@phy_tree
age_ASVs <- prune_taxa(asv_list, pseq_filt)
age_ASVs.rel <- microbiome::transform(age_ASVs, "compositional")
plot_heatmap(age_ASVs, sample.label = "Treatment",
sample.order = "Age", high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs, sample.label = "Sample.ID",
sample.order = "Age", high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs.rel, sample.label = "Sample.ID",
sample.order = "Age", high="#66CCFF", low="#000033")
plot_heatmap(age_ASVs.rel, sample.label = "Sample.ID",
high="#66CCFF", low="#000033")
psmelt_age_ASvs <- psmelt(age_ASVs)
psmelt_age_ASvs
psmelt_age_ASVs <- psmelt(age_ASVs)
View(psmelt_age_ASVs)
age_ASVs.rel <- microbiome::transform(age_ASVs, "compositional")
psmelt_age_ASVs <- psmelt(age_ASVs.rel)
View(psmelt_age_ASVs)
library(tidyverse)
library(vegan)
library(dada2)
library(mvabund)
library(RColorBrewer)
library(phyloseq)
library(microbiome)
library(parallel)
num_cores <- detectCores() - 1  # Use one less than the total number of cores
# Create a cluster
cl <- makeCluster(num_cores)
run_model <- function(dat_mvabund, fact) {
manyglm(dat_mvabund ~ Treatment * Family, family = "negative.binomial", data = fact, composition = TRUE)
}
run_anova <- function(model) {
anova(model, p.uni = "unadjusted")
}
clusterExport(cl, c("dat_mvabund", "fact", "run_model", "run_anova"))
results <- parLapply(cl, 1:num_cores, function(x) {
model <- run_model(dat_mvabund, fact)
run_anova(model)
})
pseq <- mb2021_filtered_NOT_rarefied
mb2021_filtered_NOT_rarefied <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files/mb2021_filtered_NOT_rarefied.rds")
pseq <- mb2021_filtered_NOT_rarefied
#Subset samples ----
#pseq <- subset_samples(pseq, Age %in% c("1 dpf"))
pseq <- subset_samples(pseq, Age %in% c("Spat"))
pseq <- subset_samples(pseq, !Family %in% c("9"))
pseq <- subset_samples(pseq, !Treatment %in% c("Low salinity"))
pseq <- subset_samples(pseq, !Family %in% c("9"))
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
Signif_ASVs_Spat_unadj <- c("ASV17",  "ASV30",   "ASV37",   "ASV49",   "ASV216",  "ASV237",  "ASV240",  "ASV254",  "ASV271",  "ASV314", "ASV325", "ASV347",
"ASV348", "ASV383", "ASV391", "ASV412", "ASV446", "ASV507", "ASV553", "ASV571", "ASV580", "ASV595", "ASV656", "ASV751",
"ASV841",  "ASV845",  "ASV900",  "ASV927",  "ASV964",  "ASV1088", "ASV1162", "ASV1164")
pseq <- prune_taxa(Signif_ASVs_Spat_unadj, pseq)
fact1 = sample_data(pseq)
fact = as.matrix.data.frame(fact1)
fact = as.data.frame(fact)
ASV_data_cleaned <- pseq@otu_table
ASV_data_cleaned <- as.data.frame(pseq@otu_table)
rowSums(ASV_data_cleaned)
fact$numberReads <- rowSums(ASV_data_cleaned)
dat_mvabund <- mvabund(ASV_data_cleaned)
num_cores <- detectCores() - 1  # Use one less than the total number of cores
# Create a cluster
cl <- makeCluster(num_cores)
run_model <- function(dat_mvabund, fact) {
manyglm(dat_mvabund ~ Treatment * Family, family = "negative.binomial", data = fact, composition = TRUE)
}
run_anova <- function(model) {
anova(model, p.uni = "unadjusted")
}
clusterExport(cl, c("dat_mvabund", "fact", "run_model", "run_anova"))
clusterEvalQ(cl, library(mvabund))
results <- parLapply(cl, 1:num_cores, function(x) {
model <- run_model(dat_mvabund, fact)
run_anova(model)
})
# Stop the cluster
stopCluster(cl)
results
dat_aov_unadj_Spat_LS <- results[[1]]
print(dat_aov_unadj_Spat_LS)
length(which(dat_aov_unadj_Spat_LS$uni.p[2,] < 0.05)) # Number of ASVs affected by treatment
length(which(dat_aov_unadj_Spat_LS$uni.p[3,] < 0.05)) # Number of ASVs affected by family
length(which(dat_aov_unadj_Spat_LS$uni.p[4,] < 0.05))
diff_05_treat_unadj_Spat_LS <- which(dat_aov_unadj_Spat_LS$uni.p[2,] < 0.05) # [2] is referring to the first factor of my model , in my case "Treatment"
diff_05_family_unadj_Spat_LS <- which(dat_aov_unadj_Spat_LS$uni.p[3,] < 0.05) # [3] is referring to the second factor of my model , in my case "Family" ***day time but thats wrong
diff_05_interact_unadj_Spat_LS <- which(dat_aov_unadj_Spat_LS$uni.p[4,] < 0.05) # [4] is referring to the third factor of my model , in my case "interaction Treatment and Family"
names_diff_treat_unadj_Spat_LS <- names(diff_05_treat_unadj_Spat_LS)
names_diff_family_unadj_Spat_LS <- names(diff_05_family_unadj_Spat_LS)
names_diff_interact_unadj_Spat_LS <- names(diff_05_interact_unadj_Spat_LS)
names_diff_treat_unadj_Spat_LS
names_diff_family_unadj_Spat_LS
names_diff_interact_unadj_Spat_LS
View(results)
results[[1]][["table"]]
setwd("/Users/maris/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files")
setwd("/Users/greent/Documents/GitHub/mb2021_phyloseq/Old RDS files")
setwd("/Users/greent/Documents/GitHub/mb2021_phyloseq/Old RDS files")
getwd()
setwd("/Users/maris/Documents/GitHub/Phyloseq and microbiome analysis")
setwd("/Users/greent/Documents/GitHub/mb2021_phyloseq/Old RDS files")
setwd("/Users/greent/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files")
setwd("/Users/maris/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files")
mb2021_filtered_NOT_rarefied <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files/mb2021_filtered_NOT_rarefied.rds")
run_model <- function(dat_mvabund, fact) {
manyglm(dat_mvabund ~ Treatment * Family, family = "negative.binomial", data = fact, composition = TRUE)
}
clusterExport(cl, c("dat_mvabund", "fact", "run_model", "run_anova", "Treatment", "Family"))
library(tidyverse)
library(vegan)
library(dada2)
library(mvabund)
library(RColorBrewer)
library(phyloseq)
library(microbiome)
library(parallel)
setwd("/Users/maris/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files")
mb2021_filtered_NOT_rarefied <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files/mb2021_filtered_NOT_rarefied.rds")
pseq <- mb2021_filtered_NOT_rarefied
pseq <- subset_samples(pseq, Age %in% c("Spat"))
pseq <- subset_samples(pseq, !Family %in% c("9"))
pseq <- subset_samples(pseq, !Family %in% c("9"))
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
fact1 = sample_data(pseq)
fact = as.matrix.data.frame(fact1)
fact = as.data.frame(fact)
ASV_data_cleaned <- pseq@otu_table
ASV_data_cleaned <- as.data.frame(pseq@otu_table)
rowSums(ASV_data_cleaned)
fact$numberReads <- rowSums(ASV_data_cleaned)
dat_mvabund <- mvabund(ASV_data_cleaned)
num_cores <- detectCores() - 1
cl <- makeCluster(num_cores)
run_model <- function(dat_mvabund, fact) {
manyglm(dat_mvabund ~ Treatment * Family, family = "negative.binomial", data = fact, composition = TRUE)
}
run_anova <- function(model) {
anova(model, p.uni = "unadjusted")
}
clusterExport(cl, c("dat_mvabund", "fact", "run_model", "run_anova", "Treatment", "Family"))
clusterExport(cl, c("dat_mvabund", "fact", "run_model", "run_anova"))
clusterEvalQ(cl, library(mvabund))
results <- parLapply(cl, 1:num_cores, function(x) {
model <- run_model(dat_mvabund, fact)
run_anova(model)
})
View(results)
