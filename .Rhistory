Age <- levels(Metadata$Age.fact)
print(Age)
Age.pairs <- combn(seq_along(Age), 2, simplify = FALSE, FUN = function(i)Age[i])
print(Age.pairs)
p1 <- ggviolin(ps1.meta, x = "Age", y = "Shannon", add = "boxplot",
fill = "Age",
palette = c("#a6cee3", "#b2df8a", "#fdbf6f", "pink", "plum4"),
ggtheme = theme_pubr(),
font.label = 14)
print(p1)
p1 <- p1 + scale_x_discrete(limits = c("1 dpf", "18 dpf", "Spat"))
print(p1)
p1 <- p1 + stat_compare_means(comparisons = Age.pairs)
print(p1)
p1 <- ggviolin(ps1.meta, x = "Treatment", y = "Shannon", add = "boxplot",
fill = "Age",
palette = c("#a6cee3", "#b2df8a", "#fdbf6f", "pink", "plum4"),
ggtheme = theme_pubr(),
font.label = 14)
p1
p1 <- p1 + facet_grid(~Age)
print(p1)
kruskal.test(InverseSimpson ~ Age, data = ps1.meta)
p1 <- ggviolin(ps1.meta, x = "Age", y = "InverseSimpson", add = "boxplot",
fill = "Age",
palette = c("#a6cee3", "#b2df8a", "#fdbf6f", "pink", "plum4"),
ggtheme = theme_pubr(),
font.label = 14)
p1 <- p1 + scale_x_discrete(limits = c("1 dpf", "18 dpf", "Spat"))
p1
p1 <- p1 + stat_compare_means(comparisons = Age.pairs)
p1 <- p1 + stat_compare_means(comparisons = Age.pairs)
print(p1)
Age <- levels(ps1.meta$Age)
Age <- levels(Metadata$Age.fact)
print(Age)
Age.pairs <- combn(seq_along(Age), 2, simplify = FALSE, FUN = function(i)Age[i])
print(Age.pairs)
p1 <- ggviolin(ps1.meta, x = "Age", y = "InverseSimpson", add = "boxplot",
fill = "Age",
palette = c("#a6cee3", "#b2df8a", "#fdbf6f", "pink", "plum4"),
ggtheme = theme_pubr(),
font.label = 14)
tab <- richness(pseq)
kable(head(tab))
pseq
Marissa_MU42022_unfiltered <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files/Marissa_MU42022_unfiltered.rds")
Marissa_mb2021_unfiltered <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files/Marissa_mb2021_unfiltered.rds")
pseq <- Marissa_mb2021_unfiltered
# check if any OTUs are not present in any samples (want false)
any(taxa_sums(pseq) == 0)
pseq1 <- subset_taxa(pseq,Class!="c__Chloroplast")
pseq2 <- subset_taxa(pseq1,Order!="o__Mitochondria")
ps1 <- subset_taxa(pseq2,Kingdom!="k__Archaea")
pseq1 <- subset_taxa(pseq,Order!="Chloroplast")
ps1 <- pseq1
rank_names(ps1)
x2 = prune_taxa(taxa_sums(ps1) > 500, ps1)
plot(sort(taxa_sums(x2), TRUE), type="h", ylim=c(0, 10000))
summarize_phyloseq(ps1)
summarize_phyloseq(x2)
pseq <- x2
ASV_table_data = pseq@otu_table
pdf("Phyloseq and microbiome analysis/Old RDS files/rarefaction_curve.pdf")
raref.curve <- rarecurve(ASV_table_data, ylab = "ASV Count")
ASV_table_data
View(ASV_table_data)
raref.curve <- rarecurve(ASV_table_data, ylab = "ASV Count")
raref.curve <- rarecurve(as.matrix(ASV_table_data), ylab = "ASV Count")
ASV_table_data <- as.matrix(pseq@otu_table)
View(ASV_table_data)
str(ASV_table_data)
raref.curve <- rarecurve(ASV_table_data, ylab = "ASV Count")
psmelt <- psmelt(pseq)
ASV_table_data <- psmelt$OTU
View(ASV_table_data)
str(ASV_table_data)
raref.curve <- rarecurve(ASV_table_data, ylab = "ASV Count")
pseq.prune = prune_taxa(taxa_sums(pseq) > 1, pseq)
pseq
pseq.prune
library(ggplot2)
library(data.table)
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
otu.rare = otu_table(pseq)
otu.rare = as.data.frame(t(otu.rare))
sample_names = rownames(otu.rare)
# we will use vegan rarecurve
library(vegan)
otu.rarecurve = rarecurve(otu.rare, step = 10000, label = T)
Rare <-rarefy_even_depth(x2, sample.size= 5000)
otu.rare = otu_table(Rare)
otu.rare = as.data.frame(t(otu.rare))
sample_names = rownames(otu.rare)
otu.rarecurve = rarecurve(otu.rare, step = 10000, label = T)
sample_depths <- sample_sums(pseq)
print(sample_depths)
rarecurve(t(otu_table(pseq)), step=50, cex=0.5)
rarecurve(t(otu_table(ps)), step=50, cex=0.5)
rarecurve(t(otu_table(pseq)), step=50, cex=0.5)
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
otu.rare = otu_table(pseq)
otu.rare = as.data.frame(t(otu.rare))
sample_names = rownames(otu.rare)
otu.rarecurve = rarecurve(otu.rare, step = 10000, label = T)
pseq <- Marissa_mb2021_unfiltered
pseq
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
# check if any OTUs are not present in any samples (want false)
any(taxa_sums(pseq) == 0)
pseq_filtered <- prune_taxa(taxa_sums(pseq) > 0, pseq)
any(taxa_sums(pseq_filtered) == 0)
pseq <- pseq_filtered
# check if any OTUs are not present in any samples (want false)
any(taxa_sums(pseq) == 0)
pseq1 <- subset_taxa(pseq,Class!="c__Chloroplast")
pseq2 <- subset_taxa(pseq1,Order!="o__Mitochondria")
ps1 <- subset_taxa(pseq2,Kingdom!="k__Archaea")
#chloroplast still in data under order level - remove?
pseq1 <- subset_taxa(pseq,Order!="Chloroplast")
ps1 <- pseq1
rank_names(ps1)
plot(sort(taxa_sums(ps1), TRUE), type="h", ylim=c(0, 10000))
x3 = prune_taxa(taxa_sums(ps1) > 1000, ps1)
plot(sort(taxa_sums(x3), TRUE), type="h", ylim=c(0, 10000))
x2 = prune_taxa(taxa_sums(ps1) > 500, ps1)
plot(sort(taxa_sums(x2), TRUE), type="h", ylim=c(0, 10000))
summarize_phyloseq(x2)
ps2 = prune_taxa(keepTaxa, ps1)
ps2 = prune_taxa(keepTaxa, ps1)
pseq <- x2
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
otu.rare = otu_table(pseq)
otu.rare = as.data.frame(t(otu.rare))
sample_names = rownames(otu.rare)
otu.rarecurve = rarecurve(otu.rare, step = 10000, label = T)
otu.rarecurve = rarecurve(otu.rare, step = 10000, label = F)
Rare <-rarefy_even_depth(x2, sample.size= 3000)
otu.rare = otu_table(Rare)
otu.rare = as.data.frame(t(otu.rare))
sample_names = rownames(otu.rare)
otu.rarecurve = rarecurve(otu.rare, step = 10000, label = F)
otu.rare = otu_table(pseq)
otu.rare = as.data.frame(t(otu.rare))
sample_names = rownames(otu.rare)
otu.rarecurve = rarecurve(otu.rare, step = 10000, label = F)
otu.rarecurve = rarecurve(otu.rare, step = 1000, label = F)
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = FALSE, xlim = c(0, 50000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = FALSE, xlim = c(0, 5000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = FALSE, xlim = c(0, 50000))
library(ggplot2)
library(data.table)
# Check read count
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
View(pseq@sam_data)
pseq <- subset_samples(pseq, !Sample.ID %in% c("F4L18", "T10"))
otu.rare = otu_table(pseq)
otu.rare = as.data.frame(t(otu.rare))
sample_names = rownames(otu.rare)
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = FALSE, xlim = c(0, 50000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = TRUE, xlim = c(0, 50000))
View(otu.rare)
otu.rare = otu_table(pseq)
otu.rare = as.data.frame(otu.rare)
sample_names = rownames(otu.rare)
View(otu.rare)
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = TRUE, xlim = c(0, 50000))
View(pseq@otu_table)
View(pseq@sam_data)
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = FALSE, xlim = c(0, 50000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = TRUE, xlim = c(0, 50000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = TRUE, xlim = c(0, 40000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = TRUE, xlim = c(0, 80000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = TRUE, xlim = c(0, 1000000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = TRUE, xlim = c(0, 100000))
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = FALSE, xlim = c(0, 100000))
raref.curve <- rarecurve(otu.rare, ylab = "ASV Count")
raref.curve <- rarecurve(otu.rare, label = FALSE, ylab = "ASV Count")
install.packages("mvabund")
library(mvabund)
Marissa_mb2021_unfiltered <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files/Marissa_mb2021_unfiltered.rds")
Marissa_mb2021_filtered_20240203 <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Marissa_mb2021_filtered_20240203.rds")
pseq <- Marissa_mb2021_filtered_20240203
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
library(tidyverse)
library(vegan)
library(data2)
install.packages("data2")
library(tidyverse)
library(vegan)
library(mvabund)
library(RColorBrewer)
BiocManager::install("data2")
library(data2)
BiocManager::install("data2")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2")
library(data2)
# Load your factor table , in my case is "fact"
fact <- pseq@sam_data
# Load your data table (with counts) in my case is "ASV_data_cleaned"
# Load data (samples in rows and ASVs in column) and metadata
ASV_data_cleaned <- pseq@otu_table
ASV_data_cleaned
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
# Load your factor table , in my case is "fact"
fact <- pseq@sam_data
# Load your data table (with counts) in my case is "ASV_data_cleaned"
# Load data (samples in rows and ASVs in column) and metadata
ASV_data_cleaned <- pseq@otu_table
# # PERMANOVA
adonis(ASV_data_cleaned ~ fact$Treatment + fact$Age + fact$Family)
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
pseq <- x2
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
readcoun
readcount
pseq <- Marissa_mb2021_filtered_20240203
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
# Load your factor table , in my case is "fact"
fact <- pseq@sam_data
head(fact)
# Load your data table (with counts) in my case is "ASV_data_cleaned"
# Load data (samples in rows and ASVs in column) and metadata
ASV_data_cleaned <- pseq@otu_table
# Load your data table (with counts) in my case is "ASV_data_cleaned"
# Load data (samples in rows and ASVs in column) and metadata
ASV_data_cleaned <- pseq@otu_table
#****************multivariate GLM******************
dat_mvabund <- mvabund(ASV_data_cleaned)
View(dat_mvabund)
pseq <- Marissa_mb2021_filtered_20240203
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
pseq <- Marissa_mb2021_filtered_20240203
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
# Load your factor table , in my case is "fact"
fact <- pseq@sam_data
head(fact)
# Load your data table (with counts) in my case is "ASV_data_cleaned"
# Load data (samples in rows and ASVs in column) and metadata
ASV_data_cleaned <- pseq@otu_table
ASV_data_cleaned
#****************multivariate GLM******************
dat_mvabund <- mvabund(ASV_data_cleaned)
View(dat_mvabund)
View(dat_mvabund)
rowSums(ASV_data_cleaned)
fact$numberReads <- rowSums(ASV_data_cleaned)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
View(dat_mvabund)
ASV_data_cleaned
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
# Load your factor table , in my case is "fact"
fact <- pseq@sam_data
head(fact)
pseq@otu_table
#****************multivariate GLM******************
dat_mvabund <- mvabund(ASV_data_cleaned)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
ASV_data_cleaned <- as.data.frame(pseq@otu_table)
# Load your factor table , in my case is "fact"
fact <- as.data.frame(pseq@sam_data)
#****************multivariate GLM******************
dat_mvabund <- mvabund(ASV_data_cleaned)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
str(ASV_data_cleaned)
View(fact)
# Load your factor table , in my case is "fact"
fact1 <- pseq@sam_data
fact <- as.data.frame(fact1)
View(fact)
head(fact)
str(fact)
# Load your data table (with counts) in my case is "ASV_data_cleaned"
# Load data (samples in rows and ASVs in column) and metadata
fact1 = otu_table(pseq)
fact1 = otu_table(pseq)
fact = as.data.frame(fact1)
str(fact)
# Load your factor table , in my case is "fact"
fact1 = sam_table(pseq)
# Load your factor table , in my case is "fact"
fact1 = sam_data(pseq)
fact = as.data.frame(fact1)
str(fact)
ASV_data_cleaned <- pseq@otu_table
ASV_data_cleaned <- as.data.frame(pseq@otu_table)
str(ASV_data_cleaned)
#****************multivariate GLM******************
dat_mvabund <- mvabund(ASV_data_cleaned)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
fact <- psmelt(fact1)
fact1
str(fact1)
fact = as.data.frame(fact1)
str(fact)
fact = as.matrix.data.frame(fact1)
str(fact)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
fact = as.data.frame(fact)
str(fact)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
gc()
pseq <- Marissa_mb2021_filtered_20240203
Marissa_mb2021_filtered_20240203 <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Marissa_mb2021_filtered_20240203.rds")
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
pseq <- Marissa_mb2021_filtered_20240203
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
library(tidyverse)
library(vegan)
library(data2)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", force = TRUE)
library(data2)
gc()
Marissa_mb2021_filtered_20240203 <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Marissa_mb2021_filtered_20240203.rds")
library(tidyverse)
library(vegan)
library(data2)
library(mvabund)
library(RColorBrewer)
pseq <- Marissa_mb2021_filtered_20240203
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
#correct family names
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
fact1 = sam_data(pseq)
fact = as.matrix.data.frame(fact1)
fact = as.data.frame(fact)
str(fact)
ASV_data_cleaned <- pseq@otu_table
ASV_data_cleaned <- as.data.frame(pseq@otu_table)
str(ASV_data_cleaned)
#****************multivariate GLM******************
dat_mvabund <- mvabund(ASV_data_cleaned)
rowSums(ASV_data_cleaned)
fact$numberReads <- rowSums(ASV_data_cleaned)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
dat_nb <- manyglm(dat_mvabund ~ Treatment * Age * Family + offset(log(numberReads)), family = "negative.binomial", data = fact)
dat_nb
meanvar.plot(dat_mvabund, legend = TRUE)
# add line for Poisson mean-variance relationship
abline(0,1)
plot(dat_nb, n.vars = 50)
lot(dat_nb, which = 2)
plot(dat_nb, which = 2)
dat_ps <- manyglm(dat_mvabund ~ Treatment * Age * Family + offset(log(numberReads)), family = "Poisson", data = fact)
dat_ps <- manyglm(dat_mvabund ~ Treatment * Age * Family + offset(log(numberReads)), family = "Poisson", data = fact)
?manyglm
dat_ps <- manyglm(dat_mvabund ~ Treatment * Age * Family + offset(log(numberReads)), family = "poisson", data = fact)
meanvar.plot(dat_ps, legend = TRUE)
meanvar.plot(dat_mvabund, legend = TRUE)
# add line for Poisson mean-variance relationship
abline(0,1)
# # Check the model fitting plotting the residuals
plot(dat_ps, n.vars = 50) # involves some randomisation, repeat it a couple of times
# if there are No obvious pattern among multiple plots - it is a good model fit.
plot(dat_ps, which = 2)
Marissa_mb2021_unfiltered <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Old RDS files/Marissa_mb2021_unfiltered.rds")
pseq <- Marissa_mb2021_unfiltered
pseq
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
#Sanity check
#check if any OTUs are not present in any samples (want false)
any(taxa_sums(pseq) == 0)
pseq_filtered <- prune_taxa(taxa_sums(pseq) > 0, pseq)
any(taxa_sums(pseq_filtered) == 0)
pseq <- pseq_filtered
pseq
pseq1 <- subset_taxa(pseq,Class!="c__Chloroplast")
pseq2 <- subset_taxa(pseq1,Order!="o__Mitochondria")
ps1 <- subset_taxa(pseq2,Kingdom!="k__Archaea")
#chloroplast still in data under order level - remove?
pseq1 <- subset_taxa(pseq,Order!="Chloroplast")
ps1 <- pseq1
ps1
x2 = prune_taxa(taxa_sums(ps1) > 500, ps1)
plot(sort(taxa_sums(x2), TRUE), type="h", ylim=c(0, 10000))
x2
summarize_phyloseq(x2)
ps2 = prune_taxa(keepTaxa, ps1)
pseq <- x2
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
pseq <- subset_samples(pseq, !Sample.ID %in% c("F4L18", "T10r3", "T9r2"))
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
pseq <- subset_samples(pseq, !Sample.ID %in% c("F4L18", "T10r3", "T9r2"))
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
View(pseq@sam_data)
pseq <- subset_samples(pseq, !Library_Name %in% c("F4L18", "T10r3", "T9r2"))
readcount = data.table(as(sample_data(pseq), "data.frame"),
TotalReads = sample_sums(pseq),
keep.rownames = TRUE)
setnames(readcount, "rn", "SampleID")
ggplot(readcount, aes(TotalReads)) + geom_histogram() + ggtitle("Sequencing Depth")
head(readcount[order(readcount$TotalReads), c("SampleID", "TotalReads")])
otu.rare = otu_table(pseq)
otu.rare = as.data.frame(otu.rare)
sample_names = rownames(otu.rare)
library(vegan)
otu.rarecurve <- rarecurve(otu.rare, step = 10000, label = FALSE, xlim = c(0, 100000))
raref.curve <- rarecurve(otu.rare, label = FALSE, ylab = "ASV Count")
sample_depths <- sample_sums(pseq)
print(sample_depths)
pseq.fam.rel <- microbiome::transform(pseq, "compositional")
pseq.rel <- microbiome::transform(pseq, "compositional")
ord <- ordinate(pseq.rel, "MDS", "bray")
plot_ordination(pseq, ord, color = "Treatment", shape = "Age") + geom_point(size = 4)
plot_ordination(pseq, ord, color = "Treatment", shape = "Age") + geom_point(size = 4) + facet_wrap(~Age)
gc()
library(tidyverse)
library(vegan)
library(mvabund)
library(RColorBrewer)
library(data2)
library(dada2) #is this supposed to be dada2??
Marissa_mb2021_filtered_20240203 <- readRDS("~/Documents/GitHub/Phyloseq and microbiome analysis/Marissa_mb2021_filtered_20240203.rds")
pseq <- Marissa_mb2021_filtered_20240203
pseq <- subset_samples(pseq, !Age %in% c("3 dpf"))
pseq@sam_data$Family[pseq@sam_data$Family %in% c(9, 13)] <- 1
pseq@sam_data$Family[pseq@sam_data$Family %in% c(10, 14)] <- 2
pseq@sam_data$Family[pseq@sam_data$Family %in% c(11, 15)] <- 3
pseq@sam_data$Family[pseq@sam_data$Family %in% c(12, 16)] <- 4
pseq@sam_data$Family <- as.character(pseq@sam_data$Family)
fact1 = sam_data(pseq)
fact = as.matrix.data.frame(fact1)
fact = as.data.frame(fact)
str(fact)
ASV_data_cleaned <- pseq@otu_table
ASV_data_cleaned <- as.data.frame(pseq@otu_table)
str(ASV_data_cleaned)
#****************multivariate GLM******************
dat_mvabund <- mvabund(ASV_data_cleaned)
dat_nb_compositionT = manyglm(dat_mvabund ~ Treatment * Age * Family, family="negative.binomial", data = fact, composition=TRUE)
cd ~
touch .Renviron
