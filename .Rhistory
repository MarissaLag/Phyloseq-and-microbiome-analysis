axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom") +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
scale_color_ipsum() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom") +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Phylum, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
scale_color_ipsum() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom") +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Class, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
scale_color_ipsum() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom") +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
scale_color_ipsum() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom") +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom") +
scale_shape_manual(values = custom_shapes)
color = grDevices::colors()[grep('gr(a|e)y', grDevices::colors(), invert = T)]
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = FeatureID, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_manual(values=color) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_manual(values=color) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order, shape = Family.x)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_manual(values=color) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_manual(values=color) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_ordinal()
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_ordinal() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Class)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_ordinal() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_colour_ordinal() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank(),
legend.position = "bottom") +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector)
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_dark() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_dark2() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
output$FeatureID <- factor(output$FeatureID, levels = levels(reorder(output$FeatureID, Class)))
output$FeatureID <- factor(output$FeatureID, levels = levels(reorder(output$FeatureID, Class)))
output$FeatureID <- factor(output$FeatureID, levels = levels(reorder(output$FeatureID, output$Class)))
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = )) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order )) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
output$FeatureID <- factor(output$FeatureID, levels = levels(reorder(output$FeatureID, output$Class)))
warnings()
ggplot(output, aes(x = factor(FeatureID, levels = unique(output$FeatureID)), y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values = col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = factor(FeatureID, levels = unique(output$Order)), y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values = col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = factor(FeatureID, levels = levels(reorder(output$FeatureID, output$Order))), y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values = col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = factor(FeatureID, levels = levels(Order))), y = Log_Abundance, color = Order)) +
ggplot(output, aes(x = factor(FeatureID, levels = Order)), y = Log_Abundance, color = Order)) +
ggplot(output, aes(x = factor(FeatureID, levels = Order), y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values = col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Treatment, fill = Abundance)) +
geom_tile()
ggplot(output, aes(x = FeatureID, y = Treatment, fill = Log_Abundance)) +
geom_tile()
source("~/Documents/GitHub/Phyloseq and microbiome analysis/inval_tutorial/INVAL_TUTORIAL_FOR_MICROBIOME_2023.R")
install.packages("indicspecies")
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_gray() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_dark() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_classic() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Class)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
source("~/Documents/GitHub/Phyloseq and microbiome analysis/inval_tutorial/INVAL_TUTORIAL_FOR_MICROBIOME_2023.R")
install.packages("indicspecies")
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order, shape = Phylum)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_minimal() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
ggplot(output, aes(x = FeatureID, y = Log_Abundance, color = Order)) +
geom_point(size = 3) +
theme_bw() +
scale_color_manual(values=col_vector) +
facet_grid(~Treatment) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x.bottom = element_blank(),
axis.title.x = element_blank()
) +
scale_shape_manual(values = custom_shapes)
source("~/Documents/GitHub/Phyloseq and microbiome analysis/inval_tutorial/INVAL_TUTORIAL_FOR_MICROBIOME_2023.R")
install.packages("indicspecies")
