mean_abund = mutate(mean(ASV3)) %>%
select(Treatment, Age, ASV3, mean_abund)
View(data_table)
day1_ASVs <- data_table %>%
filter(Age == "Day 01") %>%
group_by(data_table, Treatment)
day1_ASVs <- data_table %>%
filter(Age == "Day 01") %>%
group_by(Treatment)
View(day1_ASVs)
day1_ASVs <- data_table %>%
filter(Age == "Day 01") %>%
group_by(Treatment) %>%
mutate(Treatment$ASV1)
pc_FUN <- funi_df %>%
filter(Age == "Day 01") %>%
select(Treatment, Age, ASV7, ASV18)
View(funi_df)
pc_FUN = read.csv("data_table.csv", header= TRUE)
day1_ASVs <- pc_FUN %>%
filter(Age == "Day 01") %>%
group_by(Treatment) %>%
mutate(Treatment$ASV1)
data_table <- read.csv("data_table.csv")
pc_FUN <- data_table %>% filter(Age == "Day 01")
funi_df<- t(pc_FUN)
pc_FUN2 <- t(pc_FUN)
matrix_F = pc_FUN[ ,7:350]
time_a_F = pc_FUN$Treatment
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
summary(inv_F)
inv_F = as(inv_F, "matrix")
write.csv(inv_F, file="inv_F.cvs",row.names=TRUE)
write.table(inv_F,file="inv_F.csv",sep=",",dec = " ")
View(inv_F)
summary_text <- capture.output(summary(inv_F))
file_path <- "inv_F.csv"
writeLines(summary_text, file_path)
# Write the summary to the file
writeLines(summary_text, file_path)
pc_FUN <- data_table %>% filter(Age == "Day 01")
funi_df<- t(pc_FUN)
pc_FUN2 <- t(pc_FUN)
matrix_F = pc_FUN[ ,7:350]
time_a_F = pc_FUN$Treatment
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
summary(inv_F)
summary_text <- capture.output(summary(inv_F))
summary_text
file_path <- "inv_F.csv"
# Write the summary to the file
writeLines(summary_text, file_path)
data_table <- read.csv("data_table.csv")
#select filter
pc_FUN <- data_table %>% filter(Age == "Spat")
funi_df<- t(pc_FUN)
matrix_F = pc_FUN[ ,7:350]
time_a_F = pc_FUN$Treatment
inv_F = multipatt(matrix_F, time_a_F, func = "r.g", control = how(nperm=9999))
summary(inv_F)
View(pseq@tax_table)
View(pseq@otu_table)
summary_text <- capture.output(summary(inv_F))
file_path <- "inv_F_spat.csv"
writeLines(summary_text, file_path)
library(readxl)
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
View(ASV_signif)
pc_FUN <- ASV_signif[ASV_signif$Age == "Spat", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV3", "ASV88", "ASV201"), ]
ggplot(pc_FUN, aes(x=Treatment, y= Genus, size = Abundance, color = Treatment)) +
geom_point(alpha=0.7)+
scale_size(range = c(.1, 10)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
View(pc_FUN)
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = Treatment)) +
geom_point(alpha=0.7)+
scale_size(range = c(.1, 10)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=0.7)+
scale_size(range = c(.1, 10)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
pc_FUN <- ASV_signif[ASV_signif$Age == "Day 01", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV7", "ASV17"), ]
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
View(pc_FUN)
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
pc_FUN <- ASV_signif[ASV_signif$Age == "Day 01", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV7", "ASV17"), ]
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
pc_FUN <- ASV_signif[ASV_signif$Age == "Day 01", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV7", "ASV17"), ]
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
View(pc_FUN)
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV7", "ASV18"), ]
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV7", "ASV18"), ]
View(pc_FUN)
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
pc_FUN <- ASV_signif[ASV_signif$Age == "Day 01", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV7", "ASV18"), ]
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
pc_FUN <- ASV_signif[ASV_signif$Age == "Spat", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV3", "ASV88", "ASV201"), ]
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#c9d175") +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
)
ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#c9d175")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#c9d175")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
spat
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#c9d175")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none")
library(gridExtra)
grid.arrange(plot1, spat, ncol = 2)
library(gridExtra)
grid.arrange(day1, spat, ncol = 2)
day1 + spat
day1 + spat
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
title("Day 1")
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
title("Day 1")
day1 <- title("Day 1")
plot.new()
title("Day 1")
day1
day1
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Day 1") +
theme(plot.title = element_text(hjust = 0.5))
day1
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Day 1" , face = "plain") +
theme(plot.title = element_text(hjust = 0.5))
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle(element_text(label = "Day 1", face = "plain")) +
theme(plot.title = element_text(hjust = 0.5))
day1
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Day 1") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 14))
day1
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Day 1") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
day1
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#c9d175")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Spat") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
spat
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#d175b8")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Spat") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
spat
library(gridExtra)
grid.arrange(day1, spat, ncol = 2)
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_manual(values = c("ASV88" = "#758bd1", "ASV3" = "#75b8d1", "ASV201" = "#d175b8")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Spat") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
spat
library(gridExtra)
grid.arrange(day1, spat, ncol = 2)
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_manual(values = c("ASV88" = "#2d543d", "ASV3" = "#75b8d1", "ASV201" = "#d175b8")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Spat") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
spat
library(gridExtra)
grid.arrange(day1, spat, ncol = 2)
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = Genus)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Day 1") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
day1
day1
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Day 1") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
day1
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
pc_FUN <- ASV_signif[ASV_signif$Age == "Day 01", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV7", "ASV18"), ]
day1 <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_ipsum() +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Day 1") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
day1
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#d175b8")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Spat") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
spat
library(gridExtra)
grid.arrange(day1, spat, ncol = 2)
ASV_signif <- read_excel("inval_tutorial/ASV_signif.xlsx")
pc_FUN <- ASV_signif[ASV_signif$Age == "Spat", ]
pc_FUN <- pc_FUN[pc_FUN$ASV %in% c("ASV3", "ASV88", "ASV201"), ]
spat <- ggplot(pc_FUN, aes(x=Treatment, y= ASV, size = Abundance, color = ASV)) +
geom_point(alpha=1)+
scale_size(range = c(.1, 20)) +
scale_colour_manual(values = c("ASV88" = "#3f2d54", "ASV3" = "#75b8d1", "ASV201" = "#d175b8")) +
theme_ipsum() +
theme(legend.position="bottom") +
ylab("") +
xlab("") +
theme(legend.position = "none") +
ggtitle("Spat") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.title = element_text(face = "plain", size = 16))
spat
library(gridExtra)
grid.arrange(day1, spat, ncol = 2)
library("devtools")
library(phyloseq)
library(microbiome)
library(hrbrthemes)
library(viridis)
library(dplyr)
library(ggplot2)
pseq <-  Marissa_MU42022_rarefied_20231016
Marissa_MU42022_rarefied_20231016 <- readRDS("~/GitHub/mb2021_phyloseq/Marissa_MU42022_rarefied_20231016.rds")
pseq <-  Marissa_MU42022_rarefied_20231016
OTU = pseq@otu_table
Tax = pseq@tax_table
Metadata = pseq@sam_data
Tree = pseq@phy_tree
pseq <- subset_samples(pseq, !Age %in% c("Spat", "Day 03", "Day 06", "Day 15"))
pseq <- subset_samples(pseq, !Sample.type %in% "Algae")
pseq_fam <- microbiome::aggregate_rare(pseq, level = "Family", detection = 50/100, prevalence = 70/100)
pseq_phy <- microbiome::aggregate_rare(pseq, level = "Phylum", detection = 50/100, prevalence = 70/100)
pseq_gen <- microbiome::aggregate_rare(pseq, level = "Genus", detection = 50/100, prevalence = 70/100)
#convert to compositional data
pseq.fam.rel <- microbiome::transform(pseq_fam, "compositional")
pseq.phy.rel <- microbiome::transform(pseq_phy, "compositional")
pseq.gen.rel <- microbiome::transform(pseq_gen, "compositional")
pseq.core <- core(pseq.fam.rel, detection = .1/100, prevalence = 95/100)
pseq.core <- microbiome::transform(pseq.core, "compositional")
set.seed(4235421)
ord <- ordinate(pseq, "MDS", "bray")
plot_ordination(pseq, ord, color = "Treatment", shape = "Age") + geom_point(size = 4)
pseq <- psmelt(pseq)
pseq_core <- psmelt(pseq.core)
pseq_fam <- psmelt(pseq_fam)
pseq_phy <- psmelt(pseq_phy)
pseq_phy_rel <- psmelt(pseq.phy.rel)
pseq_fam_rel <- psmelt(pseq.fam.rel)
pseq_gen_rel <- psmelt(pseq.gen.rel)
pseq_Day1 <- psmelt(pseq)
pseq_Day1 <- psmelt(pseq)
